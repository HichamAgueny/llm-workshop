# Config for running the InferenceRecipe in generate.py to generate output from an LLM
#
# To launch, run the following command from root torchtune directory:
#    tune run generate --config generation

# Model arguments
model:
  # Use the base Llama3.2 model component because you'll be loading a *merged* model.
  # The LoRA weights are integrated into the main model weights already.
  _component_: torchtune.models.llama3_2.llama3_2_1b
  # Remove all LoRA-specific parameters as they are not needed when loading a merged model.
  #_component_: torchtune.models.llama3_2.lora_llama3_2_1b

checkpointer:
  _component_: torchtune.training.FullModelHFCheckpointer
  checkpoint_dir: /cluster/projects/nn9997k/hicham/llm-workshop/data/Llama-3.2-1B-Instruct_out/
  checkpoint_files: [
    hf_model_0001_0.pt
  ]
  output_dir: /cluster/projects/nn9997k/hicham/llm-workshop/data/Inference_results/Llama-3.2-1B-Instruct_inference_out/ 
  model_type: LLAMA3

device: cuda
dtype: bf16

seed: 1234

# Tokenizer arguments
tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer
  path: /cluster/projects/nn9997k/hicham/llm-workshop/data/Llama-3.2-1B-Instruct/original/tokenizer.model

# Generation arguments; defaults taken from gpt-fast
prompt:
  system: null
  user: |
    --Explain the importance of High Performance Computing in modern research in a concise way.

    --Output:
instruct_template: null
chat_format: null
max_new_tokens: 500
temperature: 0.6 # 0.8 and 0.6 are popular values to try
top_k: 300

enable_kv_cache: True

quantizer: null
